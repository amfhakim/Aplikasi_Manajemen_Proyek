{"version":3,"sources":["views/Logistik/Barang/Barang.js"],"names":["Barang","props","state","nama_barang","jenis_barang","satuan","harga","modalIsOpen","success","this","setState","e","preventDefault","toggleModal","addBarangMutation","variables","parseInt","refetchQueries","query","getBarangsQuery","Swal","fire","position","icon","title","showConfirmButton","barang_id","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","hapusBarangMutation","id","data","no","loading","barangs","map","barang","key","to","color","size","className","onClick","onDelete","bind","hover","bordered","striped","responsive","align","displayBarang","previous","tag","active","next","isOpen","onSubmit","submitForm","htmlFor","type","placeholder","onChange","target","value","required","name","Component","compose","graphql"],"mappings":"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","file":"static/js/80.a1bd07ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {graphql} from 'react-apollo';\nimport * as compose from 'lodash.flowright';\nimport Swal from 'sweetalert2';\nimport {getBarangsQuery, addBarangMutation, hapusBarangMutation} from '../queries/queries';\nimport { \n  Card, \n  CardBody, \n  CardHeader, \n  Col, \n  Pagination, \n  PaginationItem, \n  PaginationLink, \n  Row, \n  Table, \n  Button,\n  FormGroup,\n  Label,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n} from 'reactstrap';\n\nclass Barang extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      nama_barang:'',\n      jenis_barang: '',\n      satuan: '',\n      harga: '',\n      modalIsOpen: false,  \n      success: false,\n    };\n  }\n\n  toggleModal(){\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n  }\n\n  submitForm(e){\n    e.preventDefault();\n    this.toggleModal();\n    this.props.addBarangMutation({\n      variables:{\n        nama_barang:this.state.nama_barang,\n        jenis_barang: this.state.jenis_barang,\n        satuan: this.state.satuan,\n        harga:parseInt(this.state.harga),\n      },\n      refetchQueries:[{query:getBarangsQuery}]\n    });\n    Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: 'Data Barang Berhasil Disimpan',\n      showConfirmButton: true,\n    })\n  }\n\n  onDelete(barang_id){\n    Swal.fire({\n      title: 'Apakah anda Yakin?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya, Saya Yakin!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.props.hapusBarangMutation({\n          variables:{\n            id: barang_id,        \n          },\n          refetchQueries:[{query:getBarangsQuery}],\n        });\n        Swal.fire(\n          'Dihapus!',\n          'Data Barang Telah Dihapus',\n          'success'\n        )\n      }\n    })\n  }\n\n  displayBarang(){\n    var data = this.props.getBarangsQuery;\n    var no = 0;\n    if(data.loading){\n      return (<div>Loading Daftar Barang...</div>);\n    } else {\n      return data.barangs.map(barang => {\n        no++;\n        return(\n          <tr key={barang.id}>\n            <td>{no}</td>\n            <td>{barang.nama_barang}</td>\n            <td>{barang.jenis_barang}</td>\n            <td>{barang.satuan}</td>\n            <td>{barang.harga}</td>\n            <td>\n              <Link to={`/barang/editBarang/${barang.id}`}>\n              <Button color=\"success\" size=\"sm\">\n                <i className=\"fa fa-pencil\"></i>\n              </Button>\n              </Link>\n            </td>\n            <td>\n              <Button onClick={this.onDelete.bind(this, barang.id)} color=\"danger\" size=\"sm\">\n                <i className=\"fa fa-trash\"></i>\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Data Barang\n                <Button size=\"sm\" color=\"primary\" className=\"float-right mb-0\" onClick={this.toggleModal.bind(this)}>\n                  <i className=\"fa fa-plus\"></i> Tambah Data Barang\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <Table hover bordered striped responsive size=\"sm\">\n                  <thead align=\"center\">\n                  <tr>\n                    <th>No</th>\n                    <th>Nama Barang</th>\n                    <th>Jenis Barang</th>\n                    <th>Satuan</th>\n                    <th>Harga (Rp)</th>\n                    <th>Edit</th>\n                    <th>Hapus</th>\n                  </tr>\n                  </thead>\n                  <tbody align=\"center\">\n                    {this.displayBarang()}\n                  </tbody>\n                </Table>\n                <nav>\n                  <Pagination>\n                    <PaginationItem><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\n                    <PaginationItem active>\n                      <PaginationLink tag=\"button\">1</PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">2</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">3</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">4</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\n                  </Pagination>\n                </nav>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal isOpen={this.state.modalIsOpen}>\n          <ModalHeader>Form Tambah Data Barang</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={(e) => {this.submitForm(e)}}>\n              <FormGroup>\n                <Label htmlFor=\"name\">Nama Barang</Label>\n                <Input type=\"text\" id=\"name\" placeholder=\"Masukkan Nama Barang\" onChange={(e) =>this.setState({nama_barang:e.target.value})} required />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"name\">Jenis Barang</Label>\n                <Input type=\"text\" id=\"jenis\" placeholder=\"Masukkan Jenis Barang\" onChange={(e) =>this.setState({jenis_barang:e.target.value})} required />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"name\">Satuan</Label>\n                <Input type=\"select\" name=\"satuan\" id=\"satuan\" onChange={(e) =>this.setState({satuan:e.target.value})}>\n                  <option>Satuan</option>\n                  <option value=\"Kg\">Kg</option>\n                  <option value=\"Buah\">Buah</option>\n                  <option value=\"Meter\">Meter</option>\n                  <option value=\"Lembar\">Lembar</option>\n                  <option value=\"Liter\">Liter</option>\n                  <option value=\"Sak\">Sak</option>\n                  <option value=\"m\">m</option>\n                  <option value=\"m2\">m2</option>\n                  <option value=\"m3\">m3</option>\n                  <option value=\"Roll\">Roll</option>\n                  <option value=\"Kardus\">Kardus</option>\n                  <option value=\"Batang\">Batang</option>\n                  <option value=\"Truk\">Truk</option>\n                  <option value=\"Drum\">Drum</option>\n                  <option value=\"Takaran\">Takaran</option>\n                  <option value=\"Takaran\">Unit</option>\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"name\">Harga Barang</Label>\n                <Input type=\"number\" id=\"harga\" placeholder=\"Masukkan Harga Barang\" onChange={(e) =>this.setState({harga:e.target.value})} required />\n              </FormGroup>\n              <Button type=\"submit\" color=\"primary\">Submit</Button>\n              <Button color=\"danger\" onClick={this.toggleModal.bind(this)}>Batal</Button>\n            </Form>\n          </ModalBody>  \n        </Modal>\n      </div>\n\n    );\n  }\n}\n\nexport default compose(\n  graphql(getBarangsQuery, {name:\"getBarangsQuery\"}),\n  graphql(addBarangMutation, {name:\"addBarangMutation\"}),\n  graphql(hapusBarangMutation, {name:\"hapusBarangMutation\"})\n)(Barang);\n"],"sourceRoot":""}