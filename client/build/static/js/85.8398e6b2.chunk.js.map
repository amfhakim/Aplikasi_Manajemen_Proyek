{"version":3,"sources":["views/Logistik/PermintaanBarang/BuatPermintaanBarang.js"],"names":["BuatPermintaanBarang","props","submitRequest","e","state","requestItems","length","Swal","fire","position","icon","title","text","showConfirmButton","data","getPermintaanBarangsQuery","request_id","permintaanBarangs","map","request","id","item","addListRequestMutation","variables","nama_barang","nama","jumlah_barang","parseInt","jumlah","satuan","jenis","harga","status","refetchQueries","query","getListRequestsQuery","history","push","loggedIn","localStorage","getItem","req_id","redirect","selected","modalEditIsOpen","this","tanggal","divisi","kode","akun","karyawan","className","md","row","htmlFor","type","name","value","disabled","hapusPermintaanBarangMutation","getBarangsQuery","loading","barangs","barang","key","setState","modalIsOpen","defaultValue","onChange","target","placeholder","required","preventDefault","toggleModal","sama","jum","sat","har","bar","jenis_barang","newItem","el","filteredArray","filter","toggleModalEdit","to","color","onClick","onDelete","bind","onSubmit","addItem","form","displayNewRequest","size","hover","bordered","striped","responsive","align","onDeleteItem","isOpen","displayBarang","onUpdateItem","displayEditItem","Component","compose","graphql"],"mappings":"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","file":"static/js/85.8398e6b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport {graphql} from 'react-apollo';\nimport * as compose from 'lodash.flowright';\nimport Swal from 'sweetalert2';\nimport { hapusPermintaanBarangMutation, getPermintaanBarangsQuery, getBarangsQuery, getListRequestsQuery, addListRequestMutation} from '../queries/queries';\nimport {  \n  Card, \n  CardBody, \n  CardHeader, \n  Col, \n  Button, \n  Row, \n  Table,\n  FormGroup,\n  Form,\n  Label,\n  Input,\n  Modal,\n  ModalHeader, \n  ModalBody,\n} from 'reactstrap';\n\nclass BuatPermintaanBarang extends Component {\n  constructor(props){\n    super(props);\n    const username = localStorage.getItem(\"username\")\n\n    let loggedIn = true \n      if(username == null){\n        loggedIn = false\n      }\n    this.state = {\n      requestItems: [],\n      nama:'',\n      status: 'Active',\n      jumlah:'',\n      satuan:'',\n      jenis:'',\n      req_id:'',\n      redirect: true,\n      selected: '',\n      loggedIn,\n      modalEditIsOpen: false,\n    }\n  }\n\n  displayNewRequest(){\n    var data = this.props.getPermintaanBarangsQuery;\n    var tanggal = '';\n    var status = '';\n    var divisi='';\n    var kode='';\n    var nama='';\n    data.permintaanBarangs.map(request => {\n      return(\n        tanggal = request.tanggal,\n        status = request.status,\n        divisi = request.akun.karyawan.divisi.nama,\n        kode = request.kode,\n        nama = request.akun.karyawan.nama\n      );\n    });\n    return(\n      <div>\n        <Form className=\"form-horizontal\">\n          <Row> \n            <Col md=\"4\">\n              <FormGroup row>\n                <Col md=\"6\">\n                  <Label htmlFor=\"name\">Kode Permintaan</Label>\n                </Col>\n                <Col md=\"6\">\n                <Input type=\"text\" name=\"kode\" id=\"kode\" value={kode} disabled></Input> \n                </Col>\n              </FormGroup>\n            </Col>  \n            <Col md=\"4\">\n              <FormGroup row>\n              <Col md=\"3\">\n                  <Label htmlFor=\"name\">Status</Label>\n                </Col>\n                <Col md=\"9\">\n                <Input type=\"text\" name=\"kode\" id=\"kode\" value={status} disabled></Input> \n                </Col> \n              </FormGroup>\n            </Col>  \n          </Row>\n          <Row>\n            <Col md=\"4\">\n            <FormGroup row>\n            <Col md=\"6\">\n                  <Label htmlFor=\"name\">Dibuat Oleh</Label>\n                </Col>\n                <Col md=\"6\">\n                <Input type=\"text\" name=\"kode\" id=\"kode\" value={nama} disabled></Input> \n                </Col>\n              </FormGroup>\n            </Col>\n            <Col md=\"4\">\n            <FormGroup row>\n               <Col md=\"3\">\n                  <Label htmlFor=\"name\">Divisi</Label>\n                </Col>\n                <Col md=\"9\">\n                <Input type=\"text\" name=\"kode\" id=\"kode\" value={divisi} disabled></Input> \n                </Col>  \n              </FormGroup>\n            </Col>\n            <Col md=\"4\">\n            <FormGroup row>  \n            <Col md=\"3\">\n                  <Label htmlFor=\"name\">Tanggal</Label>\n                </Col>\n                <Col md=\"9\">\n                <Input type=\"text\" name=\"kode\" id=\"kode\" value={tanggal} disabled></Input> \n                </Col>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n      \n    );\n  }\n\n  onDelete(){\n    var data = this.props.getPermintaanBarangsQuery;\n    var request_id = '';\n    data.permintaanBarangs.map(request => {\n      return(\n        request_id = request.id\n      );\n    });\n    this.props.hapusPermintaanBarangMutation({ \n      variables:{\n        id: request_id,        \n      },\n      refetchQueries:[{query:getPermintaanBarangsQuery}],\n    });\n    this.props.history.push(\"/permintaanBarang/permintaanBarang\");\n  }\n\n\n  displayBarang(){\n    var data = this.props.getBarangsQuery;\n    if(data.loading){\n      return (<div>Loading Barang...</div>);\n    } else {\n      return data.barangs.map(barang => {\n        return(\n          <option key={barang.id} value={barang.nama_barang}>{barang.nama_barang}</option>\n        );\n      });\n    }\n  }\n\n  toggleModal(){\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n  }\n  toggleModalEdit(nama){\n    this.setState({\n      modalEditIsOpen: ! this.state.modalEditIsOpen,\n      selected: nama\n    });\n  }\n\n  displayEditItem(){\n    var nama='';\n    var jumlah='';\n    var harga=0;\n    this.state.requestItems.map(item =>{\n      if (item.nama === this.state.selected){\n        nama = item.nama\n        jumlah=item.jumlah\n        harga=item.harga\n      }\n    })\n    return(\n      <div>\n        <FormGroup>\n            <Label htmlFor=\"name\">Nama Barang</Label>\n            <Input type=\"text\" name=\"nama\" value={nama} id=\"nama\" disabled>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"name\">Jumlah Barang</Label>\n            <Input type=\"number\" id=\"jumlah\" defaultValue={jumlah} onChange={(e) =>this.setState({jumlah:e.target.value})} placeholder=\"Jumlah Barang\" required />\n          </FormGroup>\n      </div>\n    )\n  }\n\n  addItem(e){\n    e.preventDefault();\n    this.toggleModal();\n    var sama = false;\n    var jum = 0; var jenis= ''; var sat=''; var har=0;\n    const data = this.props.getBarangsQuery;\n    data.barangs.map(bar =>{\n      if(bar.nama_barang === this.state.nama){\n        jenis = bar.jenis_barang\n        sat = bar.satuan\n        har = bar.harga\n      }\n    })\n    if(this.state.requestItems.length === 0){\n      const newItem = { nama: this.state.nama, jumlah: this.state.jumlah, satuan: sat, jenis: jenis, harga: har};\n      this.setState(state => {\n        state.requestItems.push(newItem);\n      });\n    } else {\n      this.state.requestItems.map(item => {\n        if(item.nama === this.state.nama){\n          sama = true;\n          jum = parseInt(item.jumlah)+parseInt(this.state.jumlah);\n        }\n      });\n      if (sama === true){\n        this.setState(state => ({\n          requestItems: state.requestItems.map(\n            el => el.nama === this.state.nama? { ...el, jumlah : jum }: el\n          )\n        \n        }))\n      } else {\n        const newItem = { nama: this.state.nama, jumlah: this.state.jumlah, satuan: sat, jenis: jenis, harga: har};\n        this.setState(state => {\n          state.requestItems.push(newItem);\n        });\n      }\n    }\n    \n  }\n\n\n  submitRequest = (e) => {\n    if(this.state.requestItems.length === 0){\n      Swal.fire({\n        position: 'center',\n        icon: 'error',\n        title: 'Permintaan Barang error',\n        text: 'Silahkan pilih barang',\n        showConfirmButton: true,\n      })\n    } else {\n\n      var data = this.props.getPermintaanBarangsQuery;\n      var request_id = '';\n      data.permintaanBarangs.map(request => {\n          return(\n             request_id = request.id\n          );\n      });\n      this.state.requestItems.map(item => {\n        return(\n          this.props.addListRequestMutation({\n            variables:{\n              nama_barang: item.nama,\n              jumlah_barang: parseInt(item.jumlah),\n              satuan: item.satuan,\n              jenis: item.jenis,\n              request_id: request_id,\n              harga: item.harga,\n              status: 'Waiting',\n            },\n            refetchQueries:[{query:getPermintaanBarangsQuery}, {query:getListRequestsQuery}],\n          })\n        );\n      });\n      this.props.history.push(\"/permintaanBarang/permintaanBarang\");\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        title: 'Permintaan Barang Berhasil Disimpan',\n        showConfirmButton: true,\n      })\n    }\n  }\n\n  onDeleteItem(nama){\n      let filteredArray = this.state.requestItems.filter(item => item.nama !== nama)\n      this.setState({requestItems: filteredArray});\n  }\n\n  onUpdateItem(e){\n    e.preventDefault();\n    this.toggleModalEdit();\n    this.setState(state => ({\n      requestItems: state.requestItems.map(\n        el => el.nama === this.state.selected? { ...el, jumlah : this.state.jumlah}: el\n      )\n    \n    }))\n  }\n  \n  render() {\n    if(this.state.loggedIn === false){\n      return <Redirect to=\"/login\" />\n    }\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col>\n            <Card>\n              <CardHeader>\n                Form Permintaan Barang\n                <Link to=\"/permintaanBarang/permintaanBarang\" className={'float-right mb-0'}>\n                  <Button color=\"danger\" onClick={this.onDelete.bind(this)}>\n                      Batal\n                  </Button>\n                </Link>\n              </CardHeader>\n              <CardBody>\n               <Form onSubmit={(e) => {this.addItem(e)}}>\n                <Row form>\n                  <Col className=\"text-center\">\n                    {this.displayNewRequest()}\n                  </Col>\n                  <Col md=\"2\">\n                    \n                  </Col>\n                </Row>\n                \n                </Form>\n                <hr />\n                <Row>\n                  <Col>\n                    <h5>Daftar Barang</h5>\n                  </Col>\n                  <Col >\n                    <Button onClick={this.toggleModal.bind(this)} size=\"sm\" color=\"success\" className={'float-right mb-0'}><i className=\"fa fa-plus-circle\"></i> Tambah Barang</Button>\n                  </Col>\n                </Row>\n                  <Table hover bordered striped responsive size=\"sm\">\n                    <thead align=\"center\">\n                    <tr>\n                      <th>Nama Barang</th>\n                      <th>Jumlah</th>\n                      <th>Satuan</th>\n                      <th>Jenis Barang</th>\n                      <th>Edit</th>\n                      <th>Delete</th>\n                    </tr>\n                    </thead>\n                    <tbody align=\"center\">\n                      {\n                         this.state.requestItems.map(item => {\n                          return(\n                            <tr>\n                              <td>{item.nama}</td>\n                              <td>{item.jumlah}</td>\n                              <td>{item.satuan}</td>\n                              <td>{item.jenis}</td>\n                              <td>\n                                <Button onClick={this.toggleModalEdit.bind(this, item.nama)} color=\"success\" size=\"sm\">\n                                  <i className=\"fa fa-pencil\"></i>\n                                </Button>\n                              </td>\n                              <td>\n                                <Button onClick={this.onDeleteItem.bind(this, item.nama)} color=\"danger\" size=\"sm\">\n                                  <i className=\"fa fa-trash\"></i>\n                                </Button>\n                              </td>\n                            </tr>\n                          ) \n                         })\n                      }\n                    </tbody>\n                  </Table>\n                  <br />\n                  <div align=\"center\">  \n                    <Button onClick={(e) => {this.submitRequest(e)}} color=\"primary\">Submit</Button>\n                  </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal isOpen={this.state.modalIsOpen}>\n          <ModalHeader>Form Tambah Barang</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={(e) => {this.addItem(e)}}>\n              <FormGroup>\n                <Label htmlFor=\"name\">Nama Barang</Label>\n                <Input type=\"select\" name=\"nama\" onChange={(e) =>this.setState({nama:e.target.value})} id=\"nama\" required>\n                  <option>Nama Barang</option>\n                  {this.displayBarang()}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"name\">Jumlah Barang</Label>\n                <Input type=\"number\" id=\"jumlah\" onChange={(e) =>this.setState({jumlah:e.target.value})} placeholder=\"Jumlah Barang\" required />\n              </FormGroup>\n              <Button type=\"submit\" color=\"primary\">Tambah</Button>\n              <Button color=\"danger\" onClick={this.toggleModal.bind(this)}>Batal</Button>\n            </Form>\n          </ModalBody>  \n        </Modal>\n        <Modal isOpen={this.state.modalEditIsOpen}>\n          <ModalHeader>Form Edit Item</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={(e) => {this.onUpdateItem(e)}}>\n              {this.displayEditItem()}\n              <Button type=\"submit\" color=\"primary\">Simpan</Button>\n              <Button color=\"danger\" onClick={this.toggleModalEdit.bind(this)}>Batal</Button>\n            </Form>\n          </ModalBody>  \n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default compose( \n  graphql(getBarangsQuery, {name:\"getBarangsQuery\"}),\n  graphql(getPermintaanBarangsQuery, {name:\"getPermintaanBarangsQuery\"}),\n  graphql(getListRequestsQuery, {name:\"getListRequestsQuery\"}),\n  graphql(addListRequestMutation, {name:\"addListRequestMutation\"}),\n  graphql(hapusPermintaanBarangMutation, {name:\"hapusPermintaanBarangMutation\"}),\n  \n)(BuatPermintaanBarang);\n"],"sourceRoot":""}