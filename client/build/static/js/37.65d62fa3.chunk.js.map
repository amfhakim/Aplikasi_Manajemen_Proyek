{"version":3,"sources":["views/ManajemenProyek/queries/pekerjaanqueries.js","views/ManajemenProyek/queries/barangqueries.js","views/ManajemenProyek/queries/barangpekerjaanqueries.js","views/ManajemenProyek/Barang/Barang.js","views/ManajemenProyek/Pekerjaan/detailpekerjaan.js"],"names":["getPekerjaansQuery","gql","getPekerjaanQuery","addPekerjaan","hapusPekerjaan","getBarangsQuery","getBarangQuery","addBarang","hapusBarang","getBarangPekerjaansQuery","getBarangPekerjaanQuery","addBarangPekerjaan","hapusBarangPekerjaan","Barang","props","state","barang_id","jumlah_barang","modalIsOpen","success","pekerjaan_id","this","setState","e","preventDefault","toggleModal","variables","jumlah","parseInt","status","refetchQueries","query","Swal","fire","position","icon","title","showConfirmButton","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","id","data","loading","barangs","map","barang","jenis_barang","value","nama_barang","no","barangPekerjaans","bp","key","String","Button","color","size","Container","console","log","Card","CardHeader","className","onClick","bind","CardBody","Table","hover","bordered","striped","responsive","align","displayBarangPekerjaan","Pagination","PaginationItem","PaginationLink","previous","tag","active","next","Modal","isOpen","ModalHeader","ModalBody","Form","onSubmit","submitForm","FormGroup","Label","htmlFor","Input","type","name","onChange","target","required","displayBarang","placeholder","Component","compose","graphql","DetailPekerjaan","pekerjaan","nama_pekerjaan","disabled","tanggal_mulai","tanggal_selesai","pj_id","nama","Row","displayPekerjaan","match","params","options"],"mappings":"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","file":"static/js/37.65d62fa3.chunk.js","sourcesContent":["import {gql} from 'apollo-boost'\r\n\r\nconst getPekerjaansQuery = gql`\r\n{\r\n\tpekerjaans {\r\n\t\tnama_pekerjaan\r\n\t\ttanggal_mulai\r\n\t\ttanggal_selesai\r\n\t\tpj_id{\r\n\t\t\tnama\r\n\t\t\ttanggal_lahir\r\n\t\t\tjenis_kelamin\r\n\t\t\tagama\r\n\t\t\ttempat_lahir\r\n\t\t\talamat\r\n\t\t\tno_kontak\r\n\t\t\temail\r\n\t\t\tjabatan\r\n\t\t\tgaji\r\n\t\t\tdivisi{\r\n\t\t\t\tnama\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t\tid\r\n\t\t}\r\n\t\tproyek{\r\n\t\t\tid\r\n\t\t}\r\n\t\tid\r\n\t}\r\n}\r\n`\r\n\r\nconst getPekerjaanQuery = gql`\r\n\tquery($id: ID){\r\n\t\tpekerjaan(id: $id) {\r\n\t\t\tnama_pekerjaan\r\n\t\t\ttanggal_mulai\r\n\t\t\ttanggal_selesai\r\n\t\t\tpj_id{\r\n\t\t\t\tnama\r\n\t\t\t\ttanggal_lahir\r\n\t\t\t\tjenis_kelamin\r\n\t\t\t\tagama\r\n\t\t\t\ttempat_lahir\r\n\t\t\t\talamat\r\n\t\t\t\tno_kontak\r\n\t\t\t\temail\r\n\t\t\t\tjabatan\r\n\t\t\t\tgaji\r\n\t\t\t\tdivisi{\r\n\t\t\t\t\tnama\r\n\t\t\t\t\tid\r\n\t\t\t\t}\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t\tproyek{\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst addPekerjaan = gql`\r\nmutation($nama_pekerjaan:String!, \r\n\t$tanggal_mulai:String!, $tanggal_selesai:String!, $pj_id:String!, $proyek_id:String!){\r\n\taddPekerjaan(nama_pekerjaan: $nama_pekerjaan, tanggal_mulai:$tanggal_mulai, \r\n\t\ttanggal_selesai:$tanggal_selesai, pj_id:$pj_id, proyek_id:$proyek_id){\r\n\t\tnama_pekerjaan\r\n\t\ttanggal_mulai\r\n\t\ttanggal_selesai\r\n\t\tid\r\n\t}\r\n}\r\n`\r\n\r\nconst hapusPekerjaan = gql`\r\n\tmutation($id:ID!){\r\n\t\thapusPekerjaan(id: $id){\r\n\t\t\tnama_pekerjaan\r\n\t\t\ttanggal_mulai\r\n\t\t\ttanggal_selesai\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nexport {\r\n    getPekerjaansQuery, getPekerjaanQuery, addPekerjaan, hapusPekerjaan};","import {gql} from 'apollo-boost'\r\n\r\nconst getBarangsQuery = gql`\r\n{\r\n\tbarangs {\r\n\t\tnama_barang\r\n\t\tjenis_barang\r\n\t\tsatuan\r\n\t\tharga\r\n\t\tid\r\n\t}\r\n}\r\n`\r\n\r\nconst getBarangQuery = gql`\r\n\tquery($id: ID){\r\n\t\tbarang(id: $id) {\r\n\t\t\tnama_barang\r\n\t\t\tjenis_barang\r\n\t\t\tsatuan\r\n\t\t\tharga\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst addBarang = gql`\r\n\tmutation($nama_barang:String!, $jenis_barang:String!, $satuan:String!, $harga:Int!){\r\n\t\taddBarang(nama_barang: $nama_barang, jenis_barang: $jenis_barang, satuan:$satuan, harga:$harga){\r\n\t\t\tnama_barang\r\n\t\t\tjenis_barang\r\n\t\t\tsatuan\r\n\t\t\tharga\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst hapusBarang = gql`\r\n\tmutation($id:ID!){\r\n\t\thapusBarang(id: $id){\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nexport { getBarangsQuery,\r\n    getBarangQuery, addBarang, hapusBarang};","import {gql} from 'apollo-boost'\r\n\r\nconst getBarangPekerjaansQuery = gql`\r\n{\r\n\tbarangPekerjaans {\r\n        jumlah\r\n        barang_id{\r\n            nama_barang\r\n\t\t\tjenis_barang\r\n\t\t\tsatuan\r\n\t\t\tharga\r\n\t\t\tid\r\n        }\r\n        pekerjaan_id{\r\n            nama_pekerjaan\r\n            id\r\n        }\r\n        status\r\n\t\tid\r\n\t}\r\n}\r\n`\r\n\r\nconst getBarangPekerjaanQuery = gql`\r\n\tquery($id: ID){\r\n\t\tbarangPekerjaan(id: $id) {\r\n            jumlah\r\n            barang_id{\r\n                nama_barang\r\n                jenis_barang\r\n                satuan\r\n                harga\r\n                id\r\n            }\r\n            pekerjaan_id{\r\n                nama_pekerjaan\r\n                id\r\n            }\r\n            status\r\n            id\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst addBarangPekerjaan = gql`\r\n\tmutation($barang_id:String!, $jumlah:Int!, $pekerjaan_id:String!, $status:Boolean!){\r\n\t\taddBarangPekerjaan(barang_id: $barang_id, jumlah: $jumlah, pekerjaan_id:$pekerjaan_id, status:$status){\r\n\t\t\tjumlah\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst hapusBarangPekerjaan = gql`\r\n\tmutation($id:ID!){\r\n\t\thapusBarangPekerjaan(id: $id){\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`\r\n\r\nexport { getBarangPekerjaansQuery,\r\n    getBarangPekerjaanQuery, addBarangPekerjaan, hapusBarangPekerjaan};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {graphql} from 'react-apollo';\r\nimport * as compose from 'lodash.flowright';\r\nimport Swal from 'sweetalert2';\r\nimport {getBarangsQuery} from '../queries/barangqueries';\r\nimport {getBarangPekerjaanQuery, getBarangPekerjaansQuery, \r\n  addBarangPekerjaan, hapusBarangPekerjaan} from '../queries/barangpekerjaanqueries';\r\nimport {\r\n    Container,\r\n  Card, \r\n  CardBody, \r\n  CardHeader, \r\n  Col, \r\n  Pagination, \r\n  PaginationItem, \r\n  PaginationLink, \r\n  Row, \r\n  Table, \r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n} from 'reactstrap';\r\n\r\nclass Barang extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      barang_id:'',\r\n      jumlah_barang: 0,\r\n      modalIsOpen: false,  \r\n      success: false,\r\n      pekerjaan_id:''\r\n    };\r\n  }\r\n\r\n  toggleModal(){\r\n    this.setState({\r\n      modalIsOpen: ! this.state.modalIsOpen\r\n    });\r\n  }\r\n\r\n  submitForm(e){\r\n    e.preventDefault();\r\n    this.toggleModal();\r\n    this.props.addBarangPekerjaan({\r\n      variables:{\r\n        barang_id: this.state.barang_id,\r\n        jumlah: parseInt(this.state.jumlah_barang),\r\n        pekerjaan_id: this.props.pekerjaan_id,\r\n        status: false\r\n      },\r\n      refetchQueries:[{query:getBarangPekerjaansQuery}]\r\n    });\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Data Barang Berhasil Disimpan',\r\n      showConfirmButton: true,\r\n    })\r\n  }\r\n\r\n  onDelete(barang_id){\r\n    Swal.fire({\r\n      title: 'Apakah anda Yakin?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya, Saya Yakin!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.props.hapusBarang({\r\n          variables:{\r\n            id: barang_id,        \r\n          },\r\n          refetchQueries:[{query:getBarangsQuery}],\r\n        });\r\n        Swal.fire(\r\n          'Dihapus!',\r\n          'Data Barang Telah Dihapus',\r\n          'success'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  displayBarang(){\r\n    var data = this.props.getBarangsQuery;\r\n    var no = 0;\r\n    if(data.loading){\r\n      return (<div>Loading Daftar Barang...</div>);\r\n    } else {\r\n      return data.barangs.map(barang => {\r\n        if(barang.jenis_barang !== 'Perkakas'){\r\n           no++;\r\n          return(\r\n            <option value={barang.id}>{barang.nama_barang}</option>\r\n          );\r\n        }  \r\n      });\r\n    }\r\n  }\r\n\r\n  displayBarangPekerjaan(){\r\n    var data = this.props.getBarangPekerjaansQuery;\r\n    var no = 0;\r\n    if(data.loading){\r\n      return (<div>Loading Daftar Barang...</div>);\r\n    } else {\r\n      return data.barangPekerjaans.map(bp => {\r\n           no++;\r\n          return(\r\n            <tr key={bp.id}>\r\n              <td>{no}</td>\r\n              <td>{bp.barang_id.nama_barang}</td>\r\n              <td>{bp.jumlah}</td>\r\n              <td>{String(bp.status)}</td>\r\n              <td>\r\n                    <Button color=\"warning\" size=\"sm\">\r\n                      <a> Edit </a>\r\n                    </Button>\r\n              </td>\r\n              <td>\r\n                    <Button color=\"danger\" size=\"sm\">\r\n                      <a> Hapus </a>\r\n                    </Button>\r\n              </td>\r\n            </tr>\r\n          );\r\n      });\r\n    }\r\n  }\r\n\r\n  submitBarang(){\r\n    Swal.fire({\r\n      title: 'Apakah anda Yakin? anda tidak akan dapat mengubah lagi setelah ini',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ya, Saya Yakin!'\r\n    }).then((result) => {\r\n        Swal.fire(\r\n          'Submit Berhasil!',\r\n          'Data Barang Telah Disubmit',\r\n          'success'\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Container>\r\n          {console.log(this.props.pekerjaan_id)}\r\n            <Card>\r\n              <CardHeader>\r\n                <i className=\"fa fa-align-justify\"></i> Daftar Barang\r\n                <Button size=\"sm\" color=\"primary\" className=\"float-right mb-0\" onClick={this.toggleModal.bind(this)}>\r\n                  <i className=\"fa fa-plus\"></i> Tambah Barang\r\n                </Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table hover bordered striped responsive size=\"sm\">\r\n                  <thead align=\"center\">\r\n                  <tr>\r\n                    <th>No</th>\r\n                    <th>Nama Barang</th>\r\n                    <th>Jumlah</th>\r\n                    <th>Status</th>\r\n                    <th>Edit</th>\r\n                    <th>Hapus</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody align=\"center\">\r\n                    {this.displayBarangPekerjaan()}\r\n                  </tbody>\r\n                </Table>\r\n                <nav>\r\n                  <Pagination>\r\n                    <PaginationItem><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\r\n                    <PaginationItem active>\r\n                      <PaginationLink tag=\"button\">1</PaginationLink>\r\n                    </PaginationItem>\r\n                    <PaginationItem><PaginationLink tag=\"button\">2</PaginationLink></PaginationItem>\r\n                    <PaginationItem><PaginationLink tag=\"button\">3</PaginationLink></PaginationItem>\r\n                    <PaginationItem><PaginationLink tag=\"button\">4</PaginationLink></PaginationItem>\r\n                    <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\r\n                  </Pagination>\r\n                </nav>\r\n                <Button size=\"sm\" color=\"primary\" className=\"float-right mb-0\">\r\n                  Submit\r\n                </Button>\r\n              </CardBody>\r\n            </Card> \r\n\r\n            <Modal isOpen={this.state.modalIsOpen}>\r\n            <ModalHeader>Form Tambah Data Barang</ModalHeader>\r\n            <ModalBody>\r\n                <Form onSubmit={(e) => {this.submitForm(e)}}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"name\">Nama Barang</Label>\r\n                    <Input type=\"select\" name=\"barang_id\" id=\"barang\" onChange={(e) =>this.setState({barang_id:e.target.value})} required>\r\n                    <option value=\"\">Nama Barang</option>\r\n                    {this.displayBarang()}\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"name\">Jumlah Barang</Label>\r\n                    <Input type=\"number\" id=\"jenis\" placeholder=\"Masukkan Jumlah Barang\" onChange={(e) =>this.setState({jumlah_barang:e.target.value})} required />\r\n                </FormGroup>\r\n                <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                <Button color=\"danger\" onClick={this.toggleModal.bind(this)}>Batal</Button>\r\n                </Form>\r\n            </ModalBody>  \r\n            </Modal>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getBarangsQuery, {name:\"getBarangsQuery\"}),\r\n  graphql(getBarangPekerjaansQuery, {name:\"getBarangPekerjaansQuery\"}),\r\n  graphql(getBarangPekerjaanQuery, {name:\"getBarangPekerjaanQuery\"}),\r\n  graphql(addBarangPekerjaan, {name:\"addBarangPekerjaan\"}),\r\n  graphql(hapusBarangPekerjaan, {name:\"hapusBarangPekerjaan\"})\r\n)(Barang);\r\n","import React, {Component} from  'react'\r\nimport { graphql } from 'react-apollo';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport * as compose from 'lodash.flowright';\r\nimport Barang from '../Barang/Barang';\r\nimport Swal from 'sweetalert2';\r\nimport { getPekerjaanQuery, hapusPekerjaan } from '../queries/pekerjaanqueries';\r\nimport {getBarangsQuery, getBarangQuery, addBarang, hapusBarang} from '../queries/barangqueries'; \r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Container,\r\n    Row,\r\n    Table,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    Progress\r\n  } from 'reactstrap';\r\n\r\nclass DetailPekerjaan extends Component {\r\n\r\n  displayPekerjaan() {\r\n    const { pekerjaan } = this.props.data;\r\n    if (pekerjaan) {\r\n      return (\r\n        <Container>\r\n          <Label>Nama Pekerjaan</Label>\r\n          <Input placeholder={pekerjaan.nama_pekerjaan} disabled/>\r\n          <Label>Tanggal Mulai</Label>\r\n          <Input placeholder={pekerjaan.tanggal_mulai} disabled />\r\n          <Label>Tanggal Selesai</Label>\r\n          <Input placeholder={pekerjaan.tanggal_selesai} disabled/>\r\n          <Label>Penanggung Jawab</Label>\r\n          <Input placeholder={pekerjaan.pj_id.nama} disabled/>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n\r\n    render(){\r\n        return(\r\n            <Container>\r\n              <Card>\r\n                <CardHeader>\r\n                  <i className=\"fa fa-align-justify\"></i> Detail Pekerjaan\r\n                  <Button size=\"sm\" color=\"danger\" className=\"float-right mb-0\">\r\n                    Hapus\r\n                  </Button>\r\n                  <Button size=\"sm\" color=\"warning\" className=\"float-right mb-0\">\r\n                    Ubah\r\n                  </Button>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Container>\r\n                    <Row>\r\n                      {this.displayPekerjaan()}\r\n                    </Row>\r\n                  </Container>\r\n                </CardBody>\r\n              </Card>\r\n              <Barang pekerjaan_id={this.props.match.params.id}/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(getPekerjaanQuery, {\r\n      options: (props) => {\r\n        return {\r\n          variables: {\r\n            id: props.match.params.id\r\n          }\r\n        }\r\n      }\r\n    }),\r\n    graphql(hapusPekerjaan, { name: \"hapusProyek\" }),\r\n    graphql(getBarangsQuery, { name: \"getBarangsQuery\" }),\r\n    graphql(getBarangQuery, { name: \"getBarangQuery\" }),\r\n    graphql(addBarang, { name: \"addBarang\" }),\r\n    graphql(hapusBarang, { name: \"hapusBarang\" }),\r\n  )(DetailPekerjaan);"],"sourceRoot":""}