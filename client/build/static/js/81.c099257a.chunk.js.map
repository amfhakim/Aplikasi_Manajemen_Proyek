{"version":3,"sources":["views/Logistik/Inventaris/Inventaris.js"],"names":["Inventaris","props","state","nama","barang_id","jumlah","modalIsOpen","harga","sewa","data","this","getAllInventarisQuery","no","loading","allInventaris","map","inventaris","key","id","barang","nama_barang","jumlah_diperbaiki","jumlah_dipakai","getBarangsQuery","barangs","jenis_barang","value","setState","e","preventDefault","toggleModal","addInventaris","variables","parseInt","status","refetchQueries","query","className","size","color","onClick","bind","hover","bordered","striped","responsive","align","displayInventaris","previous","tag","active","next","isOpen","onSubmit","submitForm","htmlFor","type","name","onChange","target","required","displayBarang","placeholder","Component","compose","graphql"],"mappings":"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","file":"static/js/81.c099257a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {graphql} from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport * as compose from 'lodash.flowright';\nimport {getAllInventarisQuery, addInventaris, getBarangsQuery} from '../queries/queries';\nimport { \n  Form,\n  Card, \n  CardBody, \n  CardHeader, \n  Col, \n  Pagination, \n  PaginationItem, \n  PaginationLink, \n  Row, \n  Table,\n  Button,\n  FormGroup,\n  Label,\n  Input,\n  Modal, ModalBody, ModalHeader\n} from 'reactstrap';\n\nclass Inventaris extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      nama:'',\n      barang_id:'',\n      jumlah: 0,\n      modalIsOpen: false,  \n      harga: 0,\n      sewa: 0,\n    };\n  }\n\n  displayInventaris(){\n    var data = this.props.getAllInventarisQuery;\n    var no = 0;\n    if(data.loading){\n      return\n    } else {\n      return data.allInventaris.map(inventaris => {\n         no++;\n        return(\n          <tr key={inventaris.id}>\n            <td>{no}</td>\n            <td>{inventaris.barang.nama_barang}</td>\n            <td>{inventaris.jumlah}</td>\n            <td>{inventaris.jumlah_diperbaiki}</td>\n            <td>{inventaris.jumlah_dipakai}</td>\n            <td>{inventaris.jumlah-inventaris.jumlah_diperbaiki-inventaris.jumlah_dipakai}</td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  displayBarang(){\n    var data = this.props.getBarangsQuery;\n    if(data.loading){\n      return (<div>Loading Barang...</div>);\n    } else {\n      return data.barangs.map(barang => {\n        if(barang.jenis_barang === 'Perkakas'){\n          return(\n            <option key={barang.id} value={barang.id}>{barang.nama_barang}</option>\n          )\n        }\n      });\n    }\n  }\n\n  toggleModal(){\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n  }\n\n  submitForm(e){\n    e.preventDefault();\n    this.toggleModal();\n    this.props.addInventaris({\n      variables:{\n        barang_id:this.state.barang_id,\n        jumlah: parseInt(this.state.jumlah),\n        status: 'Available',\n        jumlah_dipakai: 0,\n        jumlah_diperbaiki: 0,\n      },\n      refetchQueries:[{query:getAllInventarisQuery}]\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n           <Col>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i>Inventaris\n                <Button size=\"sm\" color=\"primary\" className=\"float-right mb-0\" onClick={this.toggleModal.bind(this)}>\n                  <i className=\"fa fa-plus\"></i> Tambah Inventaris\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <Table hover bordered striped responsive size=\"sm\">\n                  <thead align=\"center\">\n                  <tr>\n                    <th>No</th>\n                    <th>Nama Barang</th>\n                    <th>Jumlah</th>\n                    <th>Diperbaiki</th>\n                    <th>Dipakai</th>\n                    <th>Tersedia</th>\n                  </tr>\n                  </thead>\n                  <tbody align=\"center\">\n                  {this.displayInventaris()}\n                  </tbody>\n                </Table>\n                <nav>\n                  <Pagination>\n                    <PaginationItem><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\n                    <PaginationItem active>\n                      <PaginationLink tag=\"button\">1</PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">2</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">3</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">4</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\n                  </Pagination>\n                </nav>\n              </CardBody>\n            </Card>\n          </Col>\n          \n        </Row>\n        <Modal isOpen={this.state.modalIsOpen}>\n          <ModalHeader>Form Inventaris</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={(e) => {this.submitForm(e)}}>\n              <FormGroup>\n              <Label htmlFor=\"name\">Nama Barang</Label>\n                <Input type=\"select\" name=\"nama\" onChange={(e) =>this.setState({barang_id:e.target.value})} id=\"nama\" required>\n                  <option>Nama Barang</option>\n                  {this.displayBarang()}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"name\">Jumlah</Label>\n                <Input type=\"number\" id=\"jumlah\" placeholder=\"Masukkan Jumlah Peralatan\" onChange={(e) =>this.setState({jumlah:e.target.value})} required />\n              </FormGroup>              \n              <Button type=\"submit\" color=\"primary\">Submit</Button>\n              <Button color=\"danger\" onClick={this.toggleModal.bind(this)}>Batal</Button>\n            </Form>\n          </ModalBody>  \n        </Modal>\n      </div>\n\n    );\n  }\n}\n\nexport default compose(\n  graphql(getAllInventarisQuery, {name:\"getAllInventarisQuery\"}),\n  graphql(addInventaris, {name:\"addInventaris\"}),\n  graphql(getBarangsQuery, {name:\"getBarangsQuery\"}),\n)(Inventaris);\n"],"sourceRoot":""}