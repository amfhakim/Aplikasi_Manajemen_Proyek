{"version":3,"sources":["views/Logistik/Vendor/Vendor.js"],"names":["Vendor","props","state","selected","nama","jenis","alamat","email","noTlp","modalIsOpen","this","setState","vendor_id","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","hapusVendorMutation","variables","id","refetchQueries","query","getVendorsQuery","data","no","loading","vendors","map","vendor","key","jenis_usaha","to","color","size","className","onClick","onDelete","bind","e","preventDefault","toggleModal","addVendorMutation","position","showConfirmButton","hover","bordered","striped","responsive","align","displayVendors","previous","tag","active","next","isOpen","onSubmit","submitForm","htmlFor","type","placeholder","onChange","target","value","required","Component","compose","graphql","name"],"mappings":"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","file":"static/js/89.7ac89b9f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {graphql} from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport * as compose from 'lodash.flowright';\nimport Swal from 'sweetalert2';\nimport {getVendorsQuery, addVendorMutation, hapusVendorMutation} from '../queries/queries';\nimport { \n  Card, \n  CardBody, \n  CardHeader, \n  Col, \n  Pagination, \n  PaginationItem,\n  Button, \n  PaginationLink, \n  Row, \n  Table,\n  Form, \n  FormGroup, \n  Label,\n  Input,\n  ModalHeader, ModalBody, Modal\n } from 'reactstrap';\n\nclass Vendor extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selected: null,\n      nama: '',\n      jenis:'',\n      alamat:'',\n      email:'',\n      noTlp:'',\n      modalIsOpen: false,\n    }\n  }\n\n  toggleModal(){\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n  }\n\n  onDelete(vendor_id){\n    Swal.fire({\n      title: 'Apakah anda Yakin?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya, Saya Yakin!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.props.hapusVendorMutation({\n          variables:{\n            id: vendor_id,        \n          },\n          refetchQueries:[{query:getVendorsQuery}],\n        });\n        Swal.fire(\n          'Dihapus!',\n          'Data Vendor Telah Dihapus',\n          'success'\n        )\n      }\n    })\n  }\n\n  displayVendors(){\n    var data = this.props.getVendorsQuery;\n    var no = 0;\n   \n    if(data.loading){\n      return;\n    } else {\n      return data.vendors.map(vendor => {\n         no++;\n        return(\n          <tr key={vendor.id}>\n            <td>{no}</td>\n            <td>{vendor.nama}</td>\n            <td>{vendor.jenis_usaha}</td>\n            <td>{vendor.alamat}</td>\n            <td>{vendor.email}</td>\n            <td>{vendor.noTlp}</td>\n            <td>\n              <Link to={`/vendor/editVendor/${vendor.id}`}>\n              <Button color=\"success\" size=\"sm\">\n                <i className=\"fa fa-pencil\"></i>\n              </Button>\n              </Link>\n            </td>\n            <td>\n              <Button onClick={this.onDelete.bind(this, vendor.id)} color=\"danger\" size=\"sm\">\n                <i className=\"fa fa-trash\"></i>\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n  submitForm(e){\n    e.preventDefault();\n    this.toggleModal();\n    this.props.addVendorMutation({\n      variables:{\n        nama:this.state.nama,\n        jenis_usaha: this.state.jenis,\n        alamat: this.state.alamat,\n        email: this.state.email,\n        noTlp: this.state.noTlp,\n      },\n      refetchQueries:[{query:getVendorsQuery}]\n    });\n    Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: 'Data Vendor Berhasil Disimpan',\n      showConfirmButton: true,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col>\n            <Card>\n              <CardHeader>\n              <i className=\"fa fa-align-justify\"></i>Data Vendor\n                <Button size=\"sm\" color=\"primary\" className=\"float-right mb-0\" onClick={this.toggleModal.bind(this)}>\n                  <i className=\"fa fa-plus\"></i> Tambah Data Vendor\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <Table hover bordered striped responsive size=\"sm\">\n                  <thead align=\"center\">\n                  <tr>\n                    <th>No</th>\n                    <th>Nama Vendor</th>\n                    <th>Jenis Usaha</th>\n                    <th>Alamat</th>\n                    <th>Email</th>\n                    <th>No Telepon</th>\n                    <th>Edit</th>\n                    <th>Hapus</th>\n                  </tr>\n                  </thead>\n                  <tbody align=\"center\">\n                    {this.displayVendors()}\n                  </tbody>\n                </Table>\n                <nav>\n                  <Pagination>\n                    <PaginationItem><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\n                    <PaginationItem active>\n                      <PaginationLink tag=\"button\">1</PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">2</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">3</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">4</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\n                  </Pagination>\n                </nav>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal isOpen={this.state.modalIsOpen}>\n          <ModalHeader>Form Tambah Data Peralatan</ModalHeader>\n          <ModalBody>\n          <Form onSubmit={(e) => {this.submitForm(e)}}>\n              <FormGroup>\n                <Label htmlFor=\"name\">Nama Vendor</Label>\n                <Input type=\"text\" id=\"name\" placeholder=\"Masukkan Nama Vendor\" onChange={(e) =>this.setState({nama:e.target.value})} required />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"name\">Jenis Usaha</Label>\n                <Input type=\"text\" id=\"jumlah\" placeholder=\"Masukkan Jenis Usaha\" onChange={(e) =>this.setState({jenis:e.target.value})} required />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"name\">Alamat</Label>\n                <Input type=\"text\" id=\"alamat\" placeholder=\"Masukkan Alamat\" onChange={(e) =>this.setState({alamat:e.target.value})} required />\n              </FormGroup>                \n              <FormGroup>\n                <Label htmlFor=\"name\">Email</Label>\n                <Input type=\"text\" id=\"email\" placeholder=\"Masukkan Email\" onChange={(e) =>this.setState({email:e.target.value})} required />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"name\">No Telepon</Label>\n                <Input type=\"text\" id=\"noTlp\" placeholder=\"Masukkan No Telepon\" onChange={(e) =>this.setState({noTlp:e.target.value})} required />\n              </FormGroup>\n              <Button type=\"submit\" color=\"primary\">Submit</Button>\n              <Button color=\"danger\" onClick={this.toggleModal.bind(this)}>Batal</Button>\n            </Form>\n          </ModalBody>  \n        </Modal>\n      </div>\n\n    );\n  }\n}\n\nexport default compose(\n  graphql(getVendorsQuery, {name:\"getVendorsQuery\"}),\n  graphql(addVendorMutation, {name:\"addVendorMutation\"}),\n  graphql(hapusVendorMutation, {name:\"hapusVendorMutation\"})\n)(Vendor);\n"],"sourceRoot":""}