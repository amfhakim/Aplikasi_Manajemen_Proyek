{"version":3,"sources":["views/Logistik/PenerimaanBarang/PenerimaanBarang.js"],"names":["PenerimaanBarang","props","state","akun_id","localStorage","getItem","nama","purchase_id","jumlah","modalIsOpen","harga","sewa","this","setState","data","getPurchaseOrdersQuery","loading","purchaseOrders","map","order","status","key","id","value","kode","data1","getPenerimaanBarangsQuery","no","penerimaanBarangs","request","tanggal","to","color","size","className","onClick","onDelete","bind","penerimaan_id","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","hapusPenerimaanBarang","variables","refetchQueries","query","nomor","parseInt","substring","newKode","addPenerimaanBarang","getKodeBaru","Date","toLocaleDateString","history","push","toggleModal","hover","bordered","striped","responsive","align","displayPenerimaanBarang","previous","tag","active","next","isOpen","htmlFor","type","name","onChange","e","target","required","displayPurchaseOrder","submit","Component","compose","graphql"],"mappings":"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","file":"static/js/83.4f5e911a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {graphql} from 'react-apollo';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as compose from 'lodash.flowright';\nimport Swal from 'sweetalert2';\nimport {hapusPenerimaanBarang, getPurchaseOrdersQuery, getPenerimaanBarangsQuery, addPenerimaanBarang} from '../queries/queries';\nimport { \n  Form,\n  Card, \n  CardBody, \n  CardHeader, \n  Col, \n  Pagination, \n  PaginationItem, \n  PaginationLink, \n  Row, \n  Table,\n  Button,\n  FormGroup,\n  Label,\n  Input,\n  Modal, ModalBody, ModalHeader\n} from 'reactstrap';\n\nclass PenerimaanBarang extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      akun_id: localStorage.getItem(\"user_id\"),\n      nama:'',\n      purchase_id:'',\n      jumlah: 0,\n      modalIsOpen: false,  \n      harga: 0,\n      sewa: 0,\n    };\n  }\n\n \n  toggleModal(){\n    this.setState({\n      modalIsOpen: ! this.state.modalIsOpen\n    });\n  }\n\n  displayPurchaseOrder(){\n    var data = this.props.getPurchaseOrdersQuery;\n    if(data.loading){\n      return (<div>Loading order...</div>);\n    } else {\n      return data.purchaseOrders.map(order => {\n          if(order.status === 'Disetujui'){\n            return(\n                <option key={order.id} value={order.id}>{order.kode}</option> \n              )\n          }\n      });\n    }\n  }\n\n  displayPenerimaanBarang(){\n    var data1 = this.props.getPenerimaanBarangsQuery;\n    var no = 0;\n    if(data1.loading){\n      return\n    } else {\n      return data1.penerimaanBarangs.map(request => {\n        no++;\n        return(\n          <tr key={request.id}>\n            <td>{no}</td>\n            <td>{request.kode}</td>\n            <td>{request.tanggal}</td>\n            <td>\n              <Link to={`/penerimaanBarang/detailPenerimaanBarang/${request.id}`}>\n              <Button color=\"primary\" size=\"sm\">\n                <i className=\"fa fa-file\"></i>\n                </Button>\n              </Link>\n            </td>\n            <td>\n              <Button onClick={this.onDelete.bind(this, request.id)} color=\"danger\" size=\"sm\">\n                <i className=\"fa fa-trash\"></i>\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n    }\n  }\n\n  onDelete(penerimaan_id){\n    Swal.fire({\n      title: 'Apakah anda Yakin?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ya, Saya Yakin!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.props.hapusPenerimaanBarang({\n          variables:{\n            id: penerimaan_id,        \n          },\n          refetchQueries:[{query:getPenerimaanBarangsQuery}],\n        });\n        Swal.fire(\n          'Dihapus!',\n          'Penerimaan Barang Telah Dihapus',\n          'success'\n        )\n      }\n    })\n  }\n\n  getKodeBaru(){\n    var newKode = 'PB';\n    var kode = '';\n    var nomor = 1;\n    var data = this.props.getPenerimaanBarangsQuery;\n    data.penerimaanBarangs.map(request => {\n      if(request.kode !== ''){\n        kode = request.kode\n      } \n    })\n    if(kode !== ''){\n      nomor = parseInt(kode.substring(2,5))+1\n    }\n    if(nomor < 10){\n      kode = newKode+\"00\"+nomor;\n    }else if (nomor >= 10 && nomor < 100){\n      kode = newKode+\"0\"+nomor;\n    }else {\n      kode = newKode+\"\"+nomor;\n    }\n    return kode;\n  }\n\n  submit(){\n    if(this.state.purchase_id !== ''){\n      this.props.addPenerimaanBarang({\n        variables:{\n          kode: this.getKodeBaru(),\n          tanggal: new Date().toLocaleDateString(),\n          akun_id: this.state.akun_id,\n          purchase_id: this.state.purchase_id,\n        },\n        refetchQueries:[{query:getPenerimaanBarangsQuery}],\n      });\n      this.props.history.push(`/penerimaanBarang/buatPenerimaanBarang/${this.state.purchase_id}`);\n    }\n  }\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n           <Col>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i>Penerimaan Barang\n                <Button size=\"sm\" color=\"primary\" className=\"float-right mb-0\" onClick={this.toggleModal.bind(this)}>\n                  <i className=\"fa fa-plus\"></i> Tambah Penerimaan Barang\n                </Button>\n              </CardHeader>\n              <CardBody>\n                <Table hover bordered striped responsive size=\"sm\">\n                  <thead align=\"center\">\n                  <tr>\n                    <th>No</th>\n                    <th>Kode</th>\n                    <th>Tanggal</th>\n                    <th>Detail</th>\n                    <th>Hapus</th>\n                  </tr>\n                  </thead>\n                  <tbody align=\"center\">\n                  {this.displayPenerimaanBarang()}\n                  </tbody>\n                </Table>\n                <nav>\n                  <Pagination>\n                    <PaginationItem><PaginationLink previous tag=\"button\">Prev</PaginationLink></PaginationItem>\n                    <PaginationItem active>\n                      <PaginationLink tag=\"button\">1</PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">2</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">3</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink tag=\"button\">4</PaginationLink></PaginationItem>\n                    <PaginationItem><PaginationLink next tag=\"button\">Next</PaginationLink></PaginationItem>\n                  </Pagination>\n                </nav>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal isOpen={this.state.modalIsOpen}>\n          <ModalHeader>Pilih Purchase Order</ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n              <Label htmlFor=\"name\">Kode Purchase Order</Label>\n                <Input type=\"select\" name=\"id\" onChange={(e) =>this.setState({purchase_id:e.target.value})} id=\"id\" required>\n                  <option value=\"\">Kode</option>\n                  {this.displayPurchaseOrder()}\n                </Input> \n              </FormGroup>\n                <Button type=\"submit\" color=\"primary\" onClick={this.submit.bind(this)}>Submit</Button>   \n              <Button color=\"danger\" onClick={this.toggleModal.bind(this)}>Batal</Button>\n            </Form>\n          </ModalBody>  \n        </Modal>\n      </div>\n\n    );\n  }\n}\n\nexport default compose(\n  graphql(getPenerimaanBarangsQuery, {name:\"getPenerimaanBarangsQuery\"}),\n  graphql(getPurchaseOrdersQuery, {name:\"getPurchaseOrdersQuery\"}),\n  graphql(addPenerimaanBarang, {name:\"addPenerimaanBarang\"}),\n  graphql(hapusPenerimaanBarang, {name:\"hapusPenerimaanBarang\"}),\n)(PenerimaanBarang);\n"],"sourceRoot":""}